{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/Section/Section.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/App.js","index.js","components/Section/Section.module.css"],"names":["module","exports","Section","title","children","className","styles","section","Statistics","good","neutral","bad","total","positivePercentage","item","FeedbackOptions","options","onLeaveFeedback","map","option","btn","type","onClick","charAt","toUpperCase","slice","prototype","PropTypes","func","isRequired","Notification","message","App","state","handleFeedback","feedback","setState","prevState","this","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,IAAM,+B,mBCAxBD,EAAOC,QAAU,CAAC,MAAQ,8B,kBCA1BD,EAAOC,QAAU,CAAC,KAAO,2B,4JCcVC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASC,UAAWC,IAAOC,QAA3B,UACE,6BAAKJ,IACJC,M,gBCmBUI,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,8BACE,+BACE,qBAAIR,UAAWC,IAAOQ,KAAtB,kBAAkCL,KAClC,qBAAIJ,UAAWC,IAAOQ,KAAtB,qBAAqCJ,KACrC,qBAAIL,UAAWC,IAAOQ,KAAtB,iBAAiCH,KACjC,qBAAIN,UAAWC,IAAOQ,KAAtB,mBAAmCF,KACnC,qBAAIP,UAAWC,IAAOQ,KAAtB,+BAA+CD,EAA/C,a,iCCRFE,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,mCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBACEd,UAAWC,IAAOc,IAElBC,KAAK,SACLC,QAAS,kBAAML,EAAgBE,IAJjC,SAMGA,EAAOI,OAAO,GAAGC,cAAgBL,EAAOM,MAAM,IAJ1CN,SAUbJ,EAAgBW,UAAY,CAC1BjB,KAAMkB,IAAUC,KAAKC,WACrBnB,QAASiB,IAAUC,KAAKC,WACxBlB,IAAKgB,IAAUC,KAAKC,YAGPd,Q,iBCbAe,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,oBAAI1B,UAAWC,IAAOH,MAAtB,SAA8B4B,KCkDjBC,E,4MA/CbC,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPuB,eAAiB,SAACC,GAChB,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAWE,EAAUF,GAAY,O,4CAItC,WACE,MAA+BG,KAAKL,MAA5BxB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjB4B,EAAqB9B,EAAOC,EAAUC,EACtC6B,EAAkCC,KAAKC,MAC1CjC,EAAO8B,EAAsB,KAE1BvB,EAAU2B,OAAOC,KAAKN,KAAKL,OAEjC,OACE,qCACE,cAAC,EAAD,CAAS9B,MAAM,6BAAf,SACE,cAAC,EAAD,CACEa,QAASA,EACTC,gBAAiBqB,KAAKJ,mBAI1B,cAAC,EAAD,CAAS/B,MAAM,aAAf,SACGoC,EACC,cAAC,EAAD,CACE9B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO2B,EACP1B,mBAAoB2B,IAGtB,cAAC,EAAD,CAAcT,QAAQ,+B,GAxChBc,a,YCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BlD,EAAOC,QAAU,CAAC,QAAU,4B","file":"static/js/main.31d95716.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1FUwa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__8JQUa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__2_1eR\"};","import PropTypes from \"prop-types\";\nimport styles from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => (\n  <section className={styles.section}>\n    <h2>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <ul>\n        <li className={styles.item}>Good:{good}</li>\n        <li className={styles.item}>Neutral:{neutral}</li>\n        <li className={styles.item}>Bad:{bad}</li>\n        <li className={styles.item}>Total:{total}</li>\n        <li className={styles.item}>Positive feedback:{positivePercentage}%</li>\n      </ul>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\nimport styles from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <>\n    {options.map((option) => (\n      <button\n        className={styles.btn}\n        key={option}\n        type=\"button\"\n        onClick={() => onLeaveFeedback(option)}\n      >\n        {option.charAt(0).toUpperCase() + option.slice(1)}\n      </button>\n    ))}\n  </>\n);\n\nFeedbackOptions.prototype = {\n  good: PropTypes.func.isRequired,\n  neutral: PropTypes.func.isRequired,\n  bad: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => (\n  <h3 className={styles.title}>{message}</h3>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport Section from \"./Section\";\nimport Statistics from \"./Statistics\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Notification from \"./Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = (feedback) => {\n    this.setState((prevState) => ({\n      [feedback]: prevState[feedback] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const countTotalFeedback = good + neutral + bad;\n    const countPositiveFeedbackPercentage = Math.round(\n      (good / countTotalFeedback) * 100\n    );\n    const options = Object.keys(this.state);\n\n    return (\n      <>\n        <Section title=\"Please leave your feedback\">\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {countTotalFeedback ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback}\n              positivePercentage={countPositiveFeedbackPercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__IzAkd\"};"],"sourceRoot":""}